name: build api-gateway

on:
  push:
    branches:
      - main
    paths:
      - 'api-gateway/**'
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: 'Enter the application version (example: v1.0.0, default: latest)'
        type: string

permissions:
  id-token: write
  contents: read
env:
  APP_PROJECT_NAME: "api-gateway" 
  WIP: "projects/427439741089/locations/global/workloadIdentityPools/cicd/providers/github"
  PROJECT_ID: "ictbit-labs-465111"
  SA: "cicd-sa@ictbit-labs-465111.iam.gserviceaccount.com"
  REGION: "us-central1"
  GKE_ZONE: "us-central1-a"
  REPOSITORY: "mee6k"
  GKE_CLUSTER: "ictbit-labs"
jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIP }}
          service_account: ${{ env.SA }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use GCR
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build and push to ictbit-labs
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.APP_PROJECT_NAME }}
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.APP_PROJECT_NAME }}:${{ inputs.version || 'latest' }}

  # Deploy-To-GKE:
  #   name: Deploy to GKE
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Authenticate to Google Cloud
  #       uses: google-github-actions/auth@v2
  #       with:
  #         workload_identity_provider: ${{ env.WIP }}
  #         service_account: ${{ env.SA }}
  #         project_id: ${{ env.PROJECT_ID }}

  #     - name: Set up GKE
  #       uses: google-github-actions/get-gke-credentials@v2
  #       with:
  #         cluster_name: ${{ env.GKE_CLUSTER }}
  #         location: ${{ env.GKE_ZONE }}
  #         project_id: ${{ env.PROJECT_ID }}

  #     - name: Deploy to GKE
  #       run: |
  #         kubectl apply -f deploy/k8s/application.yaml