version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: meeseecs-postgres
    environment:
      POSTGRES_DB: meeseecs_box
      POSTGRES_USER: meeseecs
      POSTGRES_PASSWORD: secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - meeseecs-network

  redis:
    image: redis:7-alpine
    container_name: meeseecs-redis
    command: redis-server --requirepass redis_password_123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - meeseecs-network

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: meeseecs-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: meeseecs
      RABBITMQ_DEFAULT_PASS: rabbitmq_password_123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - meeseecs-network

  # Core Services
  api-gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    container_name: meeseecs-api-gateway
    environment:
      - DATABASE_URL=postgres://meeseecs:secure_password_123@postgres:5432/meeseecs_box
      - REDIS_URL=redis://:redis_password_123@redis:6379
      - RABBITMQ_URL=amqp://meeseecs:rabbitmq_password_123@rabbitmq:5672/
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - meeseecs-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  meeseecs-network:
    driver: bridge